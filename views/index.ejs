<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title></title>
    <link rel="stylesheet" href="dist/css/style.css">
    <link rel="stylesheet" href="http://yui.yahooapis.com/pure/0.6.0/pure-min.css">
  </head>
  <body>
    <% include addinfo.html %>
    <!--<form class="" >
        <input id="search" type="text" name="name" value="">
        <label for="">Ordonnez par date</label>
        <input id="checkbox" type="checkbox" name="name" value="">
        <button id="btn" type="submit" name="button">Go</button>
        <p class="error">Remplir le champs pour voir les images</p>
    </form>-->

    <div class="pure-g">
        <div class="pure-u-1 pure-u-md-1-2 pure-u-lg-1-4">
            <div class="l-box resto-box">
                <!-- ici je met la vignette -->
                <h2>nom du resto</h2>
                <div>
                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fugit veniam facere dolorum obcaecati voluptates velit labore nobis ab quisquam possimus placeat laudantium perferendis cupiditate ex, omnis totam odit explicabo, molestiae!</p>
                </div>
            </div>
        </div>
    </div>

    <div id="searchHistory">
        <div>
        
        </div>
        <ul>

        </ul>
    </div>


    <div class="collection">
      <ul></ul>
    </div>

    <div class="loader loader--style1" title="0">
        <!--<svg version="1.1" id="loader-1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
        width="40px" height="40px" viewBox="0 0 40 40" enable-background="new 0 0 40 40" xml:space="preserve">
            <path opacity="0.2" fill="#000" d="M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946
                s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634
                c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z"/>
                <path fill="#000" d="M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0
                    C22.32,8.481,24.301,9.057,26.013,10.047z">
                <animateTransform attributeType="xml"
                    attributeName="transform"
                    type="rotate"
                    from="0 20 20"
                    to="360 20 20"
                    dur="0.5s"
                    repeatCount="indefinite"/>
            </path>
        </svg>-->
    </div>
    <script   src="https://code.jquery.com/jquery-3.1.0.min.js"   integrity="sha256-cCueBR6CsyA4/9szpPfrX3s49M9vUU5BgtiJj06wt/s="   crossorigin="anonymous"></script>
    <script src="underscore.js"></script>
    <script src="utils.js"></script>

    <script type="text/javascript">
        // liste d'images = données brutes
        var model = null;
        var searchHistory = [];


        // fonction qui s'occupe d'afficher la liste d'images dans l'html
        function renderPictureDom(collection) {
            var ds = '';

            collection.forEach(function(img) {
              ds += '<li><img src="'+ img.imgVignette +'"</><p>name: '+ img.name +'</p><p> id: '+ img.id +'</p></li>';
            });
            $('.collection ul').html(ds);
        }


        //je filtre les images par ordre croissant avec _.sortBy
        var sortBy = function(elt) {
            //var filteredModel = _.sortBy(model, 'name');

            debugger
            var filteredModel = _.sortBy(model, elt);


            /* Filter();
            var filteredModel = _.filter(model, function(img){
                // je suis obligé de retourner un booléen
                if(img.id === 169095) {
                return true;
                } else {
                    return false
                }
            });
            */
            renderPictureDom(filteredModel.reverse());
            //reverse() ne fonctionne qu'avec des tableaux
        };


        //recréer un nouveau DOM par ordre croissant pour écraser l'ancien
        // A corriger : si je ne fais pas de recherche au préalable, je rend le DOM avec une liste null)
        $('#checkbox').change(function() {

            if (!model) { return; } // fail fast : si model n'existe pas alors le reste de la fonction ne sera pas exécutée


            if($(this).is(':checked')) {
                sortBy('name');
            } else {
                //var filteredModel = _.sortBy(model, 'id');
                sortBy('id');
                //renderPictureDom(filteredModel);
            }
        });


        // fonction qui s'occupe d'afficher la liste d'image
        var showPicture = function(inputVal) {


        //inputVal est stocké dans le tableau searchHistory
        searchHistory.push(inputVal);
        console.log(searchHistory);

        renderSearchHistory(searchHistory);

            loadImg(inputVal, function (response){
                var filteredModel = _.sortBy(response.hits, 'id');
                model = filteredModel;
                renderPictureDom(model);
            });

        };

          function renderSearchHistory (array) {
            var ds = '';

            array.forEach(function(word) {
              ds += '<li><a href>' + word +'</a></li>';
            });
            $('#searchHistory ul').html(ds);
          }

          $('form').submit(function (e){
            e.preventDefault();

              if($('#search').val() === '' && $('#checkbox').is(':checked') || $('#search').val() === '') {
                $('.error').css('display','block');
              } else {
                var value = $('#search').val();
                showPicture(value);
                $('.error').css('display','none');
              }
          });

          $('#searchHistory').on('click', function(e) {
            e.preventDefault();

            var inputVal = e.target.innerHTML;
            showPicture(inputVal);
            debugger
          })

          // var stooges = [{name: 'moe', age: 40}, {name: 'larry', age: 50}, {name: 'curly', age: 60}];
          // tableau d'objets = collection d'objets[{...}, {...}, {...}]; => objet {property: value}
    </script>
  </body>
</html>
